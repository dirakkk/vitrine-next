name: Jira Issue Transition

on:
  pull_request:
    types: [opened, edited,synchronized]

jobs:
  jira-issue-transition:
    name: Transition Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR Title contains Ticket
        id: checkPrTitle
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            fix
            feat
          # Configure which scopes are allowed (newline-delimited).
          # These are regex patterns auto-wrapped in `^ $`.
          scopes: |
            core
            ui
            SCRUM-\d+
          # Configure that a scope must always be provided.
          requireScope: true
          # Configure which scopes are disallowed in PR titles (newline-delimited).
          # For instance by setting the value below, `chore(release): ...` (lowercase)
          # and `ci(e2e,release): ...` (unknown scope) will be rejected.
          # These are regex patterns auto-wrapped in `^ $`.
          disallowScopes: |
            release
            [A-Z]+
          # Configure additional validation for the subject based on a regex.
          # This example ensures the subject doesn't start with an uppercase character.
          subjectPattern: ^(?![A-Z]).+$
          # If `subjectPattern` is configured, you can use this property to override
          # the default error message that is shown when the pattern doesn't match.
          # The variables `subject` and `title` can be used within the message.
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.
          # If the PR contains one of these newline-delimited labels, the
          # validation is skipped. If you want to rerun the validation when
          # labels change, you might want to use the `labeled` and `unlabeled`
          # event triggers in your workflow.
          ignoreLabels: |
            bot
            ignore-semantic-pull-request

      - name: Jira Login
        id: jiraLogin
        if: steps.checkPrTitle.outcome == 'success'
        uses: frieder/gha-jira-login@v1
        env:
          JIRA_BASE_URL: ${{ vars.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ vars.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Transition Issue
        if: steps.jiraLogin.outcome == 'success'
        uses: frieder/jira-issue-transition@v1
        with:
          retries: 1
          retryDelay: 10
          timeout: 2000
          failOnError: true
          # Either one of the following three formats for 'issue' is valid (spaces are trimmed)
          issue: ${{steps.checkPrTitle.outputs.scope}}
          # Either one of the following two formats for 'transition' is valid 
          transition: In Progress
          #transition: 21
          # following are properties that can be set if defined in the transition screen & required by validator
          #assignee: 123456:12345678-abcd-abcd-abcd-1234567890ab
          #comment: Plaintext only
          #components: |
          #  = component1
          #  = component2
          #customfields: |
          #  10050: some value
          #  10051: 2023-01-01
          #  10052: https://github.com/marketplace?type=action
          #description: Plaintext only
          #duedate: 2023-02-01
          #fixversions: |
          #  = 1.0
          #  = 1.1
          #  + 2.0
          #  - 1.1
          #labels: |
          #  = foo
          #  = foo2
          #  = bar2
          #  + bar
          #  - foo2
          #  - bar2
          #priority: Lowest
          #resolution: Won't Do
          #summary: Some new fancy title